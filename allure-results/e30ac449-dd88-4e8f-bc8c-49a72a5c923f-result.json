{"name": "test_01_1___18102650321____545465__", "status": "failed", "statusDetails": {"message": "AssertionError: assert 0", "trace": "self = <case.ptest_01.TestLogin testMethod=test_01_1___18102650321____545465__>, name = '18102650321', password = '545465'\n\n    @data(*ReadData1().ReadExecl('dara'))\n    @unpack\n    def test_01(self,name,password):\n        self.newdriver.open1()\n        self.newdriver.click2()\n        self.newdriver.send_keys3(name)\n        self.newdriver.send_keys4(password)\n        self.newdriver.click5()\n        try:\n>           test=self.newdriver.panduan()\n\ncase\\ptest_01.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <page.api_page.Api_page object at 0x04194F10>\n\n    def panduan(self):\n>       a=self.find_element(By.ID,'rappkey').text\n\npage\\api_page.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <page.api_page.Api_page object at 0x04194F10>, By = 'id', value = 'rappkey'\n\n    def find_element(self,By,value):\n>       element= WebDriverWait(self.driver,timeout=10,poll_frequency=0.5)\\\n            .until(lambda x:x.find_element(by=By,value=value))\n\nbase\\base_action.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c9c0153a44598697f626bd57660365f0\")>\nmethod = <function Base_action.find_element.<locals>.<lambda> at 0x03F6A1D8>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nd:\\python3.8\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <case.ptest_01.TestLogin testMethod=test_01_1___18102650321____545465__>, name = '18102650321', password = '545465'\n\n    @data(*ReadData1().ReadExecl('dara'))\n    @unpack\n    def test_01(self,name,password):\n        self.newdriver.open1()\n        self.newdriver.click2()\n        self.newdriver.send_keys3(name)\n        self.newdriver.send_keys4(password)\n        self.newdriver.click5()\n        try:\n            test=self.newdriver.panduan()\n            self.assertEqual(test,'40b5ce7660307fde')\n        except:\n>           assert 0\nE           AssertionError: assert 0\n\ncase\\ptest_01.py:39: AssertionError"}, "start": 1592061742263, "stop": 1592061755737, "uuid": "105605f8-bafe-4e2e-976f-470100deb356", "historyId": "1273f10e13da228ae085970971314af7", "testCaseId": "8a28321b03accf282c677ebec4160ad4", "fullName": "case.ptest_01.TestLogin#test_01_1___18102650321____545465__", "labels": [{"name": "parentSuite", "value": "case"}, {"name": "suite", "value": "ptest_01"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "Acer"}, {"name": "thread", "value": "8780-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "case.ptest_01"}]}