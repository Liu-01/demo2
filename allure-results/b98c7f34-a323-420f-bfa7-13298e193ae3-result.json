{"name": "test_01_2___18107049968____Lg02101996__", "status": "failed", "statusDetails": {"message": "AssertionError: assert 0", "trace": "self = <case.ptest_01.TestLogin testMethod=test_01_2___18107049968____Lg02101996__>, name = '18107049968', password = 'Lg02101996'\n\n    @data(*ReadData1().ReadExecl('dara'))\n    @unpack\n    def test_01(self,name,password):\n        self.newdriver.open1()\n        self.newdriver.click2()\n        self.newdriver.send_keys3(name)\n        self.newdriver.send_keys4(password)\n        self.newdriver.click5()\n        try:\n>           test=self.newdriver.panduan()\n\ncase\\ptest_01.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <page.api_page.Api_page object at 0x048FA4F0>\n\n    def panduan(self):\n>       a=self.find_element(By.ID,'rappkey').text\n\npage\\api_page.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <page.api_page.Api_page object at 0x048FA4F0>, By = 'id', value = 'rappkey'\n\n    def find_element(self,By,value):\n>       element= WebDriverWait(self.driver,timeout=10,poll_frequency=0.5)\\\n            .until(lambda x:x.find_element(by=By,value=value))\n\nbase\\base_action.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bad03ce947141ace4a8af8ec50859f7f\")>\nmethod = <function Base_action.find_element.<locals>.<lambda> at 0x049248E0>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nd:\\python3.8\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <case.ptest_01.TestLogin testMethod=test_01_2___18107049968____Lg02101996__>, name = '18107049968', password = 'Lg02101996'\n\n    @data(*ReadData1().ReadExecl('dara'))\n    @unpack\n    def test_01(self,name,password):\n        self.newdriver.open1()\n        self.newdriver.click2()\n        self.newdriver.send_keys3(name)\n        self.newdriver.send_keys4(password)\n        self.newdriver.click5()\n        try:\n            test=self.newdriver.panduan()\n            self.assertEqual(test,'40b5ce7660307fde')\n            yagmail.SMTP(user='1558826079@qq.com', smtp_ssl=True, password='xdqkfykmrwjjibfd', host='smtp.qq.com') \\\n>               .send(to='1558826079@qq.com', subject='pytest测试报告', contents='详')\nE               AssertionError: assert 0\n\ncase\\ptest_01.py:39: AssertionError"}, "start": 1592061917929, "stop": 1592061941328, "uuid": "3d123451-52cf-4fee-81af-0814a11b8abd", "historyId": "8dc69c9b73ca154926fdfcebe2e1cf59", "testCaseId": "83260069b2a1a4048d45fcb53c0c18e3", "fullName": "case.ptest_01.TestLogin#test_01_2___18107049968____Lg02101996__", "labels": [{"name": "parentSuite", "value": "case"}, {"name": "suite", "value": "ptest_01"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "Acer"}, {"name": "thread", "value": "7660-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "case.ptest_01"}]}